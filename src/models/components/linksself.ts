/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LinksSelf = {
  self?: string | undefined;
};

/** @internal */
export const LinksSelf$inboundSchema: z.ZodType<
  LinksSelf,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string().optional(),
});

/** @internal */
export type LinksSelf$Outbound = {
  self?: string | undefined;
};

/** @internal */
export const LinksSelf$outboundSchema: z.ZodType<
  LinksSelf$Outbound,
  z.ZodTypeDef,
  LinksSelf
> = z.object({
  self: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LinksSelf$ {
  /** @deprecated use `LinksSelf$inboundSchema` instead. */
  export const inboundSchema = LinksSelf$inboundSchema;
  /** @deprecated use `LinksSelf$outboundSchema` instead. */
  export const outboundSchema = LinksSelf$outboundSchema;
  /** @deprecated use `LinksSelf$Outbound` instead. */
  export type Outbound = LinksSelf$Outbound;
}

export function linksSelfToJSON(linksSelf: LinksSelf): string {
  return JSON.stringify(LinksSelf$outboundSchema.parse(linksSelf));
}

export function linksSelfFromJSON(
  jsonString: string,
): SafeParseResult<LinksSelf, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LinksSelf$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LinksSelf' from JSON`,
  );
}
