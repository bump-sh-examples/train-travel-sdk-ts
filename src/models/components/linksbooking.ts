/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LinksBooking = {
  booking?: string | undefined;
};

/** @internal */
export const LinksBooking$inboundSchema: z.ZodType<
  LinksBooking,
  z.ZodTypeDef,
  unknown
> = z.object({
  booking: z.string().optional(),
});

/** @internal */
export type LinksBooking$Outbound = {
  booking?: string | undefined;
};

/** @internal */
export const LinksBooking$outboundSchema: z.ZodType<
  LinksBooking$Outbound,
  z.ZodTypeDef,
  LinksBooking
> = z.object({
  booking: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LinksBooking$ {
  /** @deprecated use `LinksBooking$inboundSchema` instead. */
  export const inboundSchema = LinksBooking$inboundSchema;
  /** @deprecated use `LinksBooking$outboundSchema` instead. */
  export const outboundSchema = LinksBooking$outboundSchema;
  /** @deprecated use `LinksBooking$Outbound` instead. */
  export type Outbound = LinksBooking$Outbound;
}

export function linksBookingToJSON(linksBooking: LinksBooking): string {
  return JSON.stringify(LinksBooking$outboundSchema.parse(linksBooking));
}

export function linksBookingFromJSON(
  jsonString: string,
): SafeParseResult<LinksBooking, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LinksBooking$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LinksBooking' from JSON`,
  );
}
