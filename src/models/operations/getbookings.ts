/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as b64$ from "../../lib/base64.js";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetBookingsRequest = {
  /**
   * The page number to return
   */
  page?: number | undefined;
  /**
   * The number of items to return per page
   */
  limit?: number | undefined;
};

export type GetBookingsBookingsLinks = {
  self?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/**
 * This is a generic request/response wrapper which contains both data and links which serve as hypermedia controls (HATEOAS).
 */
export type GetBookingsBookingsResponseBody = {
  data?: Array<components.Booking> | undefined;
  links?: GetBookingsBookingsLinks | undefined;
};

export type GetBookingsLinks = {
  self?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/**
 * This is a generic request/response wrapper which contains both data and links which serve as hypermedia controls (HATEOAS).
 */
export type GetBookingsResponseBody = {
  data?: Array<components.Booking> | undefined;
  links?: GetBookingsLinks | undefined;
};

export type GetBookingsResponseResult =
  | GetBookingsResponseBody
  | Uint8Array
  | string;

export type GetBookingsResponse = {
  headers: { [k: string]: Array<string> };
  result: GetBookingsResponseBody | Uint8Array | string;
};

/** @internal */
export const GetBookingsRequest$inboundSchema: z.ZodType<
  GetBookingsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(1),
  limit: z.number().int().default(10),
});

/** @internal */
export type GetBookingsRequest$Outbound = {
  page: number;
  limit: number;
};

/** @internal */
export const GetBookingsRequest$outboundSchema: z.ZodType<
  GetBookingsRequest$Outbound,
  z.ZodTypeDef,
  GetBookingsRequest
> = z.object({
  page: z.number().int().default(1),
  limit: z.number().int().default(10),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsRequest$ {
  /** @deprecated use `GetBookingsRequest$inboundSchema` instead. */
  export const inboundSchema = GetBookingsRequest$inboundSchema;
  /** @deprecated use `GetBookingsRequest$outboundSchema` instead. */
  export const outboundSchema = GetBookingsRequest$outboundSchema;
  /** @deprecated use `GetBookingsRequest$Outbound` instead. */
  export type Outbound = GetBookingsRequest$Outbound;
}

export function getBookingsRequestToJSON(
  getBookingsRequest: GetBookingsRequest,
): string {
  return JSON.stringify(
    GetBookingsRequest$outboundSchema.parse(getBookingsRequest),
  );
}

export function getBookingsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsRequest' from JSON`,
  );
}

/** @internal */
export const GetBookingsBookingsLinks$inboundSchema: z.ZodType<
  GetBookingsBookingsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetBookingsBookingsLinks$Outbound = {
  self?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetBookingsBookingsLinks$outboundSchema: z.ZodType<
  GetBookingsBookingsLinks$Outbound,
  z.ZodTypeDef,
  GetBookingsBookingsLinks
> = z.object({
  self: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsBookingsLinks$ {
  /** @deprecated use `GetBookingsBookingsLinks$inboundSchema` instead. */
  export const inboundSchema = GetBookingsBookingsLinks$inboundSchema;
  /** @deprecated use `GetBookingsBookingsLinks$outboundSchema` instead. */
  export const outboundSchema = GetBookingsBookingsLinks$outboundSchema;
  /** @deprecated use `GetBookingsBookingsLinks$Outbound` instead. */
  export type Outbound = GetBookingsBookingsLinks$Outbound;
}

export function getBookingsBookingsLinksToJSON(
  getBookingsBookingsLinks: GetBookingsBookingsLinks,
): string {
  return JSON.stringify(
    GetBookingsBookingsLinks$outboundSchema.parse(getBookingsBookingsLinks),
  );
}

export function getBookingsBookingsLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsBookingsLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsBookingsLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsBookingsLinks' from JSON`,
  );
}

/** @internal */
export const GetBookingsBookingsResponseBody$inboundSchema: z.ZodType<
  GetBookingsBookingsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(components.Booking$inboundSchema).optional(),
  links: z.lazy(() => GetBookingsBookingsLinks$inboundSchema).optional(),
});

/** @internal */
export type GetBookingsBookingsResponseBody$Outbound = {
  data?: Array<components.Booking$Outbound> | undefined;
  links?: GetBookingsBookingsLinks$Outbound | undefined;
};

/** @internal */
export const GetBookingsBookingsResponseBody$outboundSchema: z.ZodType<
  GetBookingsBookingsResponseBody$Outbound,
  z.ZodTypeDef,
  GetBookingsBookingsResponseBody
> = z.object({
  data: z.array(components.Booking$outboundSchema).optional(),
  links: z.lazy(() => GetBookingsBookingsLinks$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsBookingsResponseBody$ {
  /** @deprecated use `GetBookingsBookingsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetBookingsBookingsResponseBody$inboundSchema;
  /** @deprecated use `GetBookingsBookingsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetBookingsBookingsResponseBody$outboundSchema;
  /** @deprecated use `GetBookingsBookingsResponseBody$Outbound` instead. */
  export type Outbound = GetBookingsBookingsResponseBody$Outbound;
}

export function getBookingsBookingsResponseBodyToJSON(
  getBookingsBookingsResponseBody: GetBookingsBookingsResponseBody,
): string {
  return JSON.stringify(
    GetBookingsBookingsResponseBody$outboundSchema.parse(
      getBookingsBookingsResponseBody,
    ),
  );
}

export function getBookingsBookingsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsBookingsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsBookingsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsBookingsResponseBody' from JSON`,
  );
}

/** @internal */
export const GetBookingsLinks$inboundSchema: z.ZodType<
  GetBookingsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  self: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetBookingsLinks$Outbound = {
  self?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetBookingsLinks$outboundSchema: z.ZodType<
  GetBookingsLinks$Outbound,
  z.ZodTypeDef,
  GetBookingsLinks
> = z.object({
  self: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsLinks$ {
  /** @deprecated use `GetBookingsLinks$inboundSchema` instead. */
  export const inboundSchema = GetBookingsLinks$inboundSchema;
  /** @deprecated use `GetBookingsLinks$outboundSchema` instead. */
  export const outboundSchema = GetBookingsLinks$outboundSchema;
  /** @deprecated use `GetBookingsLinks$Outbound` instead. */
  export type Outbound = GetBookingsLinks$Outbound;
}

export function getBookingsLinksToJSON(
  getBookingsLinks: GetBookingsLinks,
): string {
  return JSON.stringify(
    GetBookingsLinks$outboundSchema.parse(getBookingsLinks),
  );
}

export function getBookingsLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsLinks' from JSON`,
  );
}

/** @internal */
export const GetBookingsResponseBody$inboundSchema: z.ZodType<
  GetBookingsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(components.Booking$inboundSchema).optional(),
  links: z.lazy(() => GetBookingsLinks$inboundSchema).optional(),
});

/** @internal */
export type GetBookingsResponseBody$Outbound = {
  data?: Array<components.Booking$Outbound> | undefined;
  links?: GetBookingsLinks$Outbound | undefined;
};

/** @internal */
export const GetBookingsResponseBody$outboundSchema: z.ZodType<
  GetBookingsResponseBody$Outbound,
  z.ZodTypeDef,
  GetBookingsResponseBody
> = z.object({
  data: z.array(components.Booking$outboundSchema).optional(),
  links: z.lazy(() => GetBookingsLinks$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsResponseBody$ {
  /** @deprecated use `GetBookingsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetBookingsResponseBody$inboundSchema;
  /** @deprecated use `GetBookingsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetBookingsResponseBody$outboundSchema;
  /** @deprecated use `GetBookingsResponseBody$Outbound` instead. */
  export type Outbound = GetBookingsResponseBody$Outbound;
}

export function getBookingsResponseBodyToJSON(
  getBookingsResponseBody: GetBookingsResponseBody,
): string {
  return JSON.stringify(
    GetBookingsResponseBody$outboundSchema.parse(getBookingsResponseBody),
  );
}

export function getBookingsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsResponseBody' from JSON`,
  );
}

/** @internal */
export const GetBookingsResponseResult$inboundSchema: z.ZodType<
  GetBookingsResponseResult,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetBookingsResponseBody$inboundSchema),
  b64$.zodInbound,
]);

/** @internal */
export type GetBookingsResponseResult$Outbound =
  | GetBookingsResponseBody$Outbound
  | Uint8Array;

/** @internal */
export const GetBookingsResponseResult$outboundSchema: z.ZodType<
  GetBookingsResponseResult$Outbound,
  z.ZodTypeDef,
  GetBookingsResponseResult
> = z.union([
  z.lazy(() => GetBookingsResponseBody$outboundSchema),
  b64$.zodOutbound,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsResponseResult$ {
  /** @deprecated use `GetBookingsResponseResult$inboundSchema` instead. */
  export const inboundSchema = GetBookingsResponseResult$inboundSchema;
  /** @deprecated use `GetBookingsResponseResult$outboundSchema` instead. */
  export const outboundSchema = GetBookingsResponseResult$outboundSchema;
  /** @deprecated use `GetBookingsResponseResult$Outbound` instead. */
  export type Outbound = GetBookingsResponseResult$Outbound;
}

export function getBookingsResponseResultToJSON(
  getBookingsResponseResult: GetBookingsResponseResult,
): string {
  return JSON.stringify(
    GetBookingsResponseResult$outboundSchema.parse(getBookingsResponseResult),
  );
}

export function getBookingsResponseResultFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsResponseResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsResponseResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsResponseResult' from JSON`,
  );
}

/** @internal */
export const GetBookingsResponse$inboundSchema: z.ZodType<
  GetBookingsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Headers: z.record(z.array(z.string())),
  Result: z.union([
    z.lazy(() => GetBookingsResponseBody$inboundSchema),
    b64$.zodInbound,
  ]),
}).transform((v) => {
  return remap$(v, {
    "Headers": "headers",
    "Result": "result",
  });
});

/** @internal */
export type GetBookingsResponse$Outbound = {
  Headers: { [k: string]: Array<string> };
  Result: GetBookingsResponseBody$Outbound | Uint8Array;
};

/** @internal */
export const GetBookingsResponse$outboundSchema: z.ZodType<
  GetBookingsResponse$Outbound,
  z.ZodTypeDef,
  GetBookingsResponse
> = z.object({
  headers: z.record(z.array(z.string())),
  result: z.union([
    z.lazy(() => GetBookingsResponseBody$outboundSchema),
    b64$.zodOutbound,
  ]),
}).transform((v) => {
  return remap$(v, {
    headers: "Headers",
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookingsResponse$ {
  /** @deprecated use `GetBookingsResponse$inboundSchema` instead. */
  export const inboundSchema = GetBookingsResponse$inboundSchema;
  /** @deprecated use `GetBookingsResponse$outboundSchema` instead. */
  export const outboundSchema = GetBookingsResponse$outboundSchema;
  /** @deprecated use `GetBookingsResponse$Outbound` instead. */
  export type Outbound = GetBookingsResponse$Outbound;
}

export function getBookingsResponseToJSON(
  getBookingsResponse: GetBookingsResponse,
): string {
  return JSON.stringify(
    GetBookingsResponse$outboundSchema.parse(getBookingsResponse),
  );
}

export function getBookingsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetBookingsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBookingsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBookingsResponse' from JSON`,
  );
}
